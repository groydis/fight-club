// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  PENDING
  INACTIVE
  BANNED
}

enum UserRole {
  USER
  MODERATOR
  ADMIN
}

model User {
  id        String     @id
  name      String
  email     String     @unique
  role      UserRole   @default(USER)
  status    UserStatus @default(PENDING)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  characters Character[]
}

model Character {
  id              String          @id @default(uuid())
  name            String
  description     String
  lore            String
  stats           Json
  status          CharacterStatus @default(PROCESSING)
  imageFrontUrl   String?
  imageBackUrl    String?
  imageProfileUrl String?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  moves           CharacterMove[]
  userId          String?
  user            User?            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CharacterMove {
  id          String   @id @default(uuid())
  name        String
  description String
  stat        String
  effectValue Int
  type        MoveType
  characterId String

  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
}

enum MoveType {
  BASIC
  SPECIAL
}

enum CharacterStatus {
  PROCESSING
  READY
  FAILED
}
